#!/bin/bash

# This script is run as a last resort by auditd in
# order to try to fix a very low disk space available
# See /etc/audit/auditd.conf

LOCK_DIR=/tmp/.try-to-fix-low-on-disk-space.lock

# Creating a directory is an atomic operation,
# this is why we use it as a mutex to prevent
# multiple instances of this script to run.
if ! mkdir -- "$LOCK_DIR"; then
	exit 0
fi

space_left="$(btrfs filesystem usage / | grep df | awk '{ print $4 }')"
echo "NOTIFY {\"urgency\": \"critical\", \"title\": \"CRITICALLY LOW ON DISK SPACE\", \"body\": \"Starting to take action...\\nSpace left on device: $space_left\"}"

# Agressively cleaning pacman cache
pacman --noconfirm -Scc

# Clean cache from users' home
rm -rf /home/*/.cache/yay
rm -rf /home/*/.cache/mozilla/firefox
rm -rf /home/*/.cache/chromium
rm -rf /home/*/.cache/pip
rm -rf /home/*/.cache/go-build
rm -rf /home/*/.cache/debuginfod_client

# Balance btrfs
btrfs balance start -dusage=0 /
btrfs balance start -dusage=50 /
btrfs subvolume sync /
sync

# Inform the admin what space is left after the cleanup
space_left="$(btrfs filesystem usage / | grep df | awk '{ print $4 }')"
echo "NOTIFY {\"urgency\": \"normal\", \"title\": \"CRITICALLY LOW ON DISK SPACE\", \"body\": \"Necessary actions have been taken\\nSpace left on device: $space_left\"}"

# Tell auditd to try to resume logging
kill -SIGUSR2 $PPID

# We wait a bit for auditd to resume because
# if it decides to rerun this script immediatly
# we are still holding the lock causing the new
# instance to exit.
sleep 1s
rmdir -- "$LOCK_DIR"
